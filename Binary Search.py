# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eJGgyYtBpQFlF5ONW2wgBR4oSlNMrvLY
"""



import time
import matplotlib.pyplot as plt
import random

def recursive_binary_search(arr, target, low, high):
    if low > high:
        return -1
    mid = (low + high) // 2
    if arr[mid] == target:
        return mid
    elif arr[mid] > target:
        return recursive_binary_search(arr, target, low, mid - 1)
    else:
        return recursive_binary_search(arr, target, mid + 1, high)

n_values = [100, 500, 1000, 5000, 10000, 50000, 100000]
times = []

for n in n_values:
    arr = sorted([random.randint(0, n) for _ in range(n)])
    target = random.choice(arr)

    start_time = time.time()
    recursive_binary_search(arr, target, 0, len(arr) - 1)
    end_time = time.time()

    elapsed_time = end_time - start_time
    times.append(elapsed_time)

plt.plot(n_values, times, marker='o', color='b')
plt.title('Time Complexity of Recursive Binary Search')
plt.xlabel('Number of Elements (n)')
plt.ylabel('Time Taken (seconds)')
plt.grid(True)
plt.show()